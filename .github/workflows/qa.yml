name: Quality and Assurance

on:
  push:
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.2']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, iconv, json, mbstring
          tools: symfony, phpunit
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --ignore-platform-req=php

  security:
    name: Security
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.2']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, iconv, json, mbstring
          tools: symfony, phpunit
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --ignore-platform-req=php

      - name: Security check
        run: symfony security:check

  qa:
    name: Quality
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.2']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, iconv, json, mbstring
          tools: symfony, phpunit
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --ignore-platform-req=php

      - name: Lint templates
        run: php tests/Fixtures/app/bin/console lint:twig src/Bridge/Symfony/Bundle/templates

      - name: Lint container
        run: php tests/Fixtures/app/bin/console lint:container

      - name: PHP code sniffer
        run: php ./vendor/bin/phpcs -p -n --colors --standard=.phpcs.xml

      - name: PHPCsFixer
        run: PHP_CS_FIXER_IGNORE_ENV=1 php ./vendor/bin/php-cs-fixer fix --dry-run --using-cache=no --verbose --diff

      - name: PHPStan
        run: php ./vendor/bin/phpstan

      - name: PHPInsights
        run: php vendor/bin/phpinsights analyse --no-interaction --min-quality=100 --min-complexity=90 --min-architecture=100 --min-style=100 --disable-security-check

  test:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.2']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, iconv, json, mbstring
          tools: symfony, phpunit
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader --ignore-platform-req=php

      - name: Install assets
        run: php tests/Fixtures/app/bin/console assets:install --symlink --relative

      - name: Execute behat tests
        run: php vendor/bin/behat -f progress
